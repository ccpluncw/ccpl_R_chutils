% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ch.rmLearningEffect.r
\name{ch.rmLearningEffect}
\alias{ch.rmLearningEffect}
\title{A function to remove a learning function from data}
\usage{
ch.rmLearningEffect(data, x, y, fitCol, resCol, a = 1, b = -1, c = 1)
}
\arguments{
\item{data}{the dataframe containing the data..}

\item{x}{a string the specifies the column name in "data" that contains the x variable.}

\item{y}{a string the specifies the column name in "data" that contains the y variable.}

\item{fitCol}{a string that specifies the name of the new column that will contain the predicted datapoints.}

\item{resCol}{a string that specifies the name of the new column that will contain the residual datapoints.}
}
\value{
a list containing: data = original datafram with the new columns; nlsFit = the nls fit object.
}
\description{
This function attempts to fit a non-linear, decellerating function to the specifed data.  Then it adds two columns to the dataframe: a column with the predicted datapoints based on the nls fit and a column with the residuals around that fit. The function also returns the nls fit object
}
\examples{
ch.moralsRmLearningEffect (data=moralsData,"trial", "RT", "fitRT", "resRT")
}
\keyword{function}
\keyword{learning}
\keyword{morals}
\keyword{remove}
